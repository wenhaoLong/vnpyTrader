
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftPLUSMINUSleftTIMESDIVIDErightUPLUSUMINUSAND ASSIGN BEGIN COLON COMMA COMMENT DIVIDE DOUBLE_STRING END EQ FLOAT FUNCTION_NAME GE GT ID IF INTEGER LBRACE LBRACKET LE LPAREN LT MINUS NE NEWLINE OR PERIOD PLUS RBRACE RBRACKET RPAREN SEMI SINGLE_STRING THEN TIMES VARIABLEprogram : program statement\n               | statementstatement : ID ASSIGN expr SEMIstatement : expr SEMIstatement : IF expr THEN BEGIN program ENDstatement : expr COMMA expr SEMIexpr : MINUS expr %prec UMINUS\n            | PLUS expr %prec UPLUSexpr : expr PLUS expr\n            | expr MINUS expr\n            | expr TIMES expr\n            | expr DIVIDE exprexpr : expr LT expr\n            | expr LE expr\n            | expr GT expr\n            | expr GE expr\n            | expr EQ expr\n            | expr NE expr\n            | expr AND expr\n            | expr OR exprexpr : LPAREN expr RPARENexpr : IDexpr : numberexpr : strexpr : functionfunction : FUNCTION_NAME LPAREN args RPAREN\n                | FUNCTION_NAME\n                | FUNCTION_NAME LPAREN RPAREN\n    args : args COMMA expr\n            | expr\n    number : INTEGER\n              | FLOAT\n              | INTEGER FLOAT\n    str : SINGLE_STRING\n           | DOUBLE_STRING'
    
_lr_action_items = {'ID':([0,1,2,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[3,3,-2,34,34,34,34,-1,34,-4,34,34,34,34,34,34,34,34,34,34,34,34,34,34,-3,-6,3,34,3,-5,]),'IF':([0,1,2,17,19,59,60,61,64,66,],[5,5,-2,-1,-4,-3,-6,5,5,-5,]),'MINUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,],[6,6,-2,-22,22,6,6,6,6,-23,-24,-25,-31,-32,-34,-35,-27,-1,6,-4,6,6,6,6,6,6,6,6,6,6,6,6,6,22,-22,-7,-8,22,-33,6,22,22,-9,-10,-11,-12,22,22,22,22,22,22,22,22,-21,-28,22,-3,-6,6,-26,6,6,22,-5,]),'PLUS':([0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,59,60,61,62,63,64,65,66,],[7,7,-2,-22,21,7,7,7,7,-23,-24,-25,-31,-32,-34,-35,-27,-1,7,-4,7,7,7,7,7,7,7,7,7,7,7,7,7,21,-22,-7,-8,21,-33,7,21,21,-9,-10,-11,-12,21,21,21,21,21,21,21,21,-21,-28,21,-3,-6,7,-26,7,7,21,-5,]),'LPAREN':([0,1,2,5,6,7,8,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[8,8,-2,8,8,8,8,39,-1,8,-4,8,8,8,8,8,8,8,8,8,8,8,8,8,8,-3,-6,8,8,8,-5,]),'INTEGER':([0,1,2,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[12,12,-2,12,12,12,12,-1,12,-4,12,12,12,12,12,12,12,12,12,12,12,12,12,12,-3,-6,12,12,12,-5,]),'FLOAT':([0,1,2,5,6,7,8,12,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[13,13,-2,13,13,13,13,38,-1,13,-4,13,13,13,13,13,13,13,13,13,13,13,13,13,13,-3,-6,13,13,13,-5,]),'SINGLE_STRING':([0,1,2,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[14,14,-2,14,14,14,14,-1,14,-4,14,14,14,14,14,14,14,14,14,14,14,14,14,14,-3,-6,14,14,14,-5,]),'DOUBLE_STRING':([0,1,2,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[15,15,-2,15,15,15,15,-1,15,-4,15,15,15,15,15,15,15,15,15,15,15,15,15,15,-3,-6,15,15,15,-5,]),'FUNCTION_NAME':([0,1,2,5,6,7,8,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,39,59,60,61,63,64,66,],[16,16,-2,16,16,16,16,-1,16,-4,16,16,16,16,16,16,16,16,16,16,16,16,16,16,-3,-6,16,16,16,-5,]),'$end':([1,2,17,19,59,60,66,],[0,-2,-1,-4,-3,-6,-5,]),'END':([2,17,19,59,60,64,66,],[-2,-1,-4,-3,-6,66,-5,]),'ASSIGN':([3,],[18,]),'SEMI':([3,4,9,10,11,12,13,14,15,16,34,35,36,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,62,],[-22,19,-23,-24,-25,-31,-32,-34,-35,-27,-22,-7,-8,-33,59,60,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-28,-26,]),'COMMA':([3,4,9,10,11,12,13,14,15,16,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,62,65,],[-22,20,-23,-24,-25,-31,-32,-34,-35,-27,-22,-7,-8,-33,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,63,-28,-30,-26,-29,]),'TIMES':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,23,-23,-24,-25,-31,-32,-34,-35,-27,23,-22,-7,-8,23,-33,23,23,23,23,-11,-12,23,23,23,23,23,23,23,23,-21,-28,23,-26,23,]),'DIVIDE':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,24,-23,-24,-25,-31,-32,-34,-35,-27,24,-22,-7,-8,24,-33,24,24,24,24,-11,-12,24,24,24,24,24,24,24,24,-21,-28,24,-26,24,]),'LT':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,25,-23,-24,-25,-31,-32,-34,-35,-27,25,-22,-7,-8,25,-33,25,25,-9,-10,-11,-12,25,25,25,25,25,25,25,25,-21,-28,25,-26,25,]),'LE':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,26,-23,-24,-25,-31,-32,-34,-35,-27,26,-22,-7,-8,26,-33,26,26,-9,-10,-11,-12,26,26,26,26,26,26,26,26,-21,-28,26,-26,26,]),'GT':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,27,-23,-24,-25,-31,-32,-34,-35,-27,27,-22,-7,-8,27,-33,27,27,-9,-10,-11,-12,27,27,27,27,27,27,27,27,-21,-28,27,-26,27,]),'GE':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,28,-23,-24,-25,-31,-32,-34,-35,-27,28,-22,-7,-8,28,-33,28,28,-9,-10,-11,-12,28,28,28,28,28,28,28,28,-21,-28,28,-26,28,]),'EQ':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,29,-23,-24,-25,-31,-32,-34,-35,-27,29,-22,-7,-8,29,-33,29,29,-9,-10,-11,-12,29,29,29,29,29,29,29,29,-21,-28,29,-26,29,]),'NE':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,30,-23,-24,-25,-31,-32,-34,-35,-27,30,-22,-7,-8,30,-33,30,30,-9,-10,-11,-12,30,30,30,30,30,30,30,30,-21,-28,30,-26,30,]),'AND':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,31,-23,-24,-25,-31,-32,-34,-35,-27,31,-22,-7,-8,31,-33,31,31,-9,-10,-11,-12,31,31,31,31,31,31,31,31,-21,-28,31,-26,31,]),'OR':([3,4,9,10,11,12,13,14,15,16,33,34,35,36,37,38,40,41,42,43,44,45,46,47,48,49,50,51,52,53,55,57,58,62,65,],[-22,32,-23,-24,-25,-31,-32,-34,-35,-27,32,-22,-7,-8,32,-33,32,32,-9,-10,-11,-12,32,32,32,32,32,32,32,32,-21,-28,32,-26,32,]),'THEN':([9,10,11,12,13,14,15,16,33,34,35,36,38,42,43,44,45,46,47,48,49,50,51,52,53,55,57,62,],[-23,-24,-25,-31,-32,-34,-35,-27,54,-22,-7,-8,-33,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,-28,-26,]),'RPAREN':([9,10,11,12,13,14,15,16,34,35,36,37,38,39,42,43,44,45,46,47,48,49,50,51,52,53,55,56,57,58,62,65,],[-23,-24,-25,-31,-32,-34,-35,-27,-22,-7,-8,55,-33,57,-9,-10,-11,-12,-13,-14,-15,-16,-17,-18,-19,-20,-21,62,-28,-30,-26,-29,]),'BEGIN':([54,],[61,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'program':([0,61,],[1,64,]),'statement':([0,1,61,64,],[2,17,2,17,]),'expr':([0,1,5,6,7,8,18,20,21,22,23,24,25,26,27,28,29,30,31,32,39,61,63,64,],[4,4,33,35,36,37,40,41,42,43,44,45,46,47,48,49,50,51,52,53,58,4,65,4,]),'number':([0,1,5,6,7,8,18,20,21,22,23,24,25,26,27,28,29,30,31,32,39,61,63,64,],[9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,9,]),'str':([0,1,5,6,7,8,18,20,21,22,23,24,25,26,27,28,29,30,31,32,39,61,63,64,],[10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,10,]),'function':([0,1,5,6,7,8,18,20,21,22,23,24,25,26,27,28,29,30,31,32,39,61,63,64,],[11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,]),'args':([39,],[56,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> program","S'",1,None,None,None),
  ('program -> program statement','program',2,'p_program','myparse.py',21),
  ('program -> statement','program',1,'p_program','myparse.py',22),
  ('statement -> ID ASSIGN expr SEMI','statement',4,'p_statement_assign','myparse.py',30),
  ('statement -> expr SEMI','statement',2,'p_statement_expr','myparse.py',36),
  ('statement -> IF expr THEN BEGIN program END','statement',6,'p_statement_ifthen','myparse.py',40),
  ('statement -> expr COMMA expr SEMI','statement',4,'p_statement_ifcomma','myparse.py',44),
  ('expr -> MINUS expr','expr',2,'p_expr_unary','myparse.py',48),
  ('expr -> PLUS expr','expr',2,'p_expr_unary','myparse.py',49),
  ('expr -> expr PLUS expr','expr',3,'p_expr_binop','myparse.py',53),
  ('expr -> expr MINUS expr','expr',3,'p_expr_binop','myparse.py',54),
  ('expr -> expr TIMES expr','expr',3,'p_expr_binop','myparse.py',55),
  ('expr -> expr DIVIDE expr','expr',3,'p_expr_binop','myparse.py',56),
  ('expr -> expr LT expr','expr',3,'p_expr_relation','myparse.py',60),
  ('expr -> expr LE expr','expr',3,'p_expr_relation','myparse.py',61),
  ('expr -> expr GT expr','expr',3,'p_expr_relation','myparse.py',62),
  ('expr -> expr GE expr','expr',3,'p_expr_relation','myparse.py',63),
  ('expr -> expr EQ expr','expr',3,'p_expr_relation','myparse.py',64),
  ('expr -> expr NE expr','expr',3,'p_expr_relation','myparse.py',65),
  ('expr -> expr AND expr','expr',3,'p_expr_relation','myparse.py',66),
  ('expr -> expr OR expr','expr',3,'p_expr_relation','myparse.py',67),
  ('expr -> LPAREN expr RPAREN','expr',3,'p_expr_group','myparse.py',71),
  ('expr -> ID','expr',1,'p_expr_id','myparse.py',75),
  ('expr -> number','expr',1,'p_expr_number','myparse.py',82),
  ('expr -> str','expr',1,'p_expr_str','myparse.py',86),
  ('expr -> function','expr',1,'p_expr_function','myparse.py',90),
  ('function -> FUNCTION_NAME LPAREN args RPAREN','function',4,'p_function','myparse.py',94),
  ('function -> FUNCTION_NAME','function',1,'p_function','myparse.py',95),
  ('function -> FUNCTION_NAME LPAREN RPAREN','function',3,'p_function','myparse.py',96),
  ('args -> args COMMA expr','args',3,'p_args','myparse.py',104),
  ('args -> expr','args',1,'p_args','myparse.py',105),
  ('number -> INTEGER','number',1,'p_number','myparse.py',114),
  ('number -> FLOAT','number',1,'p_number','myparse.py',115),
  ('number -> INTEGER FLOAT','number',2,'p_number','myparse.py',116),
  ('str -> SINGLE_STRING','str',1,'p_str','myparse.py',124),
  ('str -> DOUBLE_STRING','str',1,'p_str','myparse.py',125),
]
